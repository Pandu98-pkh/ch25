import{c as o,b as c}from"./api-CsEofBni.js";let d=!1;const l=s=>{const t=new Set,a=[];for(const e of s){const r=e.studentId||e.id||`generated-${Date.now()}-${Math.random()}`;if(!t.has(r))t.add(r),a.push({...e,studentId:r});else{const n=`${r}-${Date.now()}`;t.add(n),a.push({...e,studentId:n})}}return a},h=s=>{const t=new Set,a=[];for(const e of s)if(e.id)if(!t.has(e.id))t.add(e.id),a.push(e);else{const r=`${e.id}-${Date.now()}`;t.add(r),a.push({...e,id:r})}else a.push(e);return a},p=async(s,t=1,a=10)=>{try{try{const{signal:e,clearTimeout:r}=o(),n=await c.get("/students",{signal:e,params:{page:t,limit:a,...s}});r();const i=l(n.data.data||[]),u=h(i);return{data:u,currentPage:n.data.currentPage||t,totalPages:n.data.totalPages||Math.ceil((n.data.count||0)/a),count:n.data.count||u.length}}catch(e){throw console.error("Error fetching students with API:",e),e}}catch(e){throw console.error("Error fetching students:",e),e}},w=async s=>{try{const{signal:t,clearTimeout:a}=o(),e=await c.get(`/students/${s}`,{signal:t});return a(),e.data}catch(t){throw console.error(`Error fetching student with ID ${s}:`,t),t}},S=async s=>{try{console.log("🚀 studentService.createStudent called with:",s);const{signal:t,clearTimeout:a}=o();console.log("📡 Sending POST request to /students with data:",s);const e=await c.post("/students",s,{signal:t});return console.log("✅ Student creation successful, response:",e.data),a(),e.data}catch(t){throw console.error("❌ Error creating student:",t),t}},m=async(s,t)=>{try{const{signal:a,clearTimeout:e}=o(),r=await c.put(`/students/${s}`,t,{signal:a});return e(),r.data}catch(a){throw console.error(`Error updating student with ID ${s}:`,a),a}},I=async s=>{try{const{signal:t,clearTimeout:a}=o();return await c.delete(`/students/${s}`,{signal:t}),a(),!0}catch(t){throw console.error(`Error deleting student with ID ${s}:`,t),t}},f=async s=>{try{const{signal:t,clearTimeout:a}=o(),e=await c.post("/students/bulk-delete",{studentIds:s},{signal:t});return a(),e.data}catch(t){throw console.error("Error bulk deleting students:",t),t}},v=async s=>{try{const{signal:t,clearTimeout:a}=o();console.log("📡 Sending POST request to /students/batch with existing User IDs from database:",s);const e=await c.post("/students/batch",{students:s},{signal:t});return console.log("✅ Batch student creation successful, response:",e.data),a(),e.data}catch(t){throw console.error("❌ Error in batch add students:",t),t}};export{v as addStudentsBatch,f as bulkDeleteStudents,S as createStudent,I as deleteStudent,w as getStudent,p as getStudents,m as updateStudent};
